dist: bionic
language: cpp
services:
  - xvfb

env:
  global:
    - GITHUB_REPO:      CytopiaTeam/Cytopia
    - TRAVIS: true
    - CTEST_OUTPUT_ON_FAILURE: 1

matrix:
  include:
    # gcc build
    - os: linux
      name: GCC 8 Build
      python: 3.7
      compiler: gcc-8
      addons:
        sonarcloud:
          organization: "vbfcdf134m3fasd123gfdgdfs"
          token:
            secure: "QkapNhxUL2iArxTDmA3D88Tu8DMPBRcZEzrcNBecq8FZfy/rqlVApL84BQwvUt3olbfMRG9HcNm0KKDVzywj6+VBrs0hQJcy92WZWB+rRocL9bB3khPrxVPCAfAx8Gvhl8cS5RMpwR3CYG3SiNUcnWGdYssow0yNA00PUA+emqTXVEYxl61TPSl1JJKIqJZNjFpnl4AqSNyYPw3JgZe5Egi24kPgj0HteKESCjmkvDOO/zB1yl09PW2Qozvpbhk7L5b/SbLxNSRJ19QC/5QleAQM0HC+iWWC2BGAIJ+QHAWZzlz8rya65m+kH55GxU8ZiLpjHvqubcgiNfuJdB4Qk92Omrnv7WTBqWglhmNSt5ilk8U1jiNHdJ4nrAxUrymgqlbqHXQr8bcNGk/7Kf2fKzuIfLVbtKzW2ESbLkCGfImk2m3pxN0Aine7ugbJ22SJeMrwhE0oQsRdTioWQRs6t9CVEA28r6g3VDKYPnx3JLC+OR3SXMmBTEyMHIiOKDMzbqa7CKQzIH38cpSwkKxHVbg/CPmX8OTLnTeWLieSc1g4V+0H/Yr6e0KARx81mKkGJ/5EO1tx08XGYWxWLriIIwJx3pxgJlBcifNT350wFoIanvHYoXb4GQKT50kv28qPjW+p6jNCsd9kHWuDMXjt0Dk3jsK8YMqnzd+xy2q3mJY="
        apt:
          sources:
            # Official Kitware APT repository. Currently supports Bionic and Xenial.
            # More information at: https://apt.kitware.com
            - sourceline: "deb https://apt.kitware.com/ubuntu/ xenial main"
              key_url: "https://apt.kitware.com/keys/kitware-archive-latest.asc"
          packages:
            - cmake
            - ninja-build
            - doxygen
            - graphviz
            - libsdl2-dev
            - libsdl2-image-dev
            - libsdl2-mixer-dev
            - libsdl2-ttf-dev
            - libnoise-dev
            - libopenal-dev

      before_script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DUSE_PACKAGE_MANAGER=OFF -DENABLE_ANGELSCRIPT=OFF -DENABLE_MOFILEREADER=OFF .

      script:
        - >
          if [ "${TRAVIS_SECURE_ENV_VARS}" == "true" ]; then
            echo "Running sonar build";
            build-wrapper-linux-x86-64 --out-dir bw-output make -j2;
          fi;
        - >
          if [ "${TRAVIS_SECURE_ENV_VARS}" == "false" ]; then
            echo "Running pullrequest build";
            make -j2;
          fi;
        - xvfb-run -a ctest
        - make gcov
        - make copy_coverage

    # clang build
    - os: linux
      name: CLANG 7 Build
      compiler: clang
      python: 3.7
      addons:
        apt:
          sources:
            # Official Kitware APT repository. Currently supports Bionic and Xenial.
            # More information at: https://apt.kitware.com
            - sourceline: "deb https://apt.kitware.com/ubuntu/ xenial main"
              key_url: "https://apt.kitware.com/keys/kitware-archive-latest.asc"
          packages:
            - cmake
            - ninja-build
            - p7zip-full
            - ninja-build
            - doxygen
            - graphviz
            - libsdl2-dev
            - libsdl2-image-dev
            - libsdl2-mixer-dev
            - libsdl2-ttf-dev
            - libnoise-dev
            - libopenal-dev
            - clang-7
            - libc++-7-dev # C++17 support in libstd++
      env:
        - DEPLOY_DOCUMENTATION=true
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"
        - TARGET="linux"
        
      before_script:
        - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DUSE_PACKAGE_MANAGER=OFF -DENABLE_ANGELSCRIPT=OFF -DENABLE_MOFILEREADER=OFF .

      script:
        - ninja
        - xvfb-run -a ctest
        - sh ./tools/CI/upload-CI-build.sh
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then doxygen Doxyfile; fi

    - os: osx
      name: XCode 11.3 Build
      osx_image: xcode11.3
      env: TARGET=macOS
      language: objective-c
      python: 3.7

      install:
        - brew update
        - brew install conan

      before_script:
        - cmake -DCMAKE_BUILD_TYPE=Release .

      script:
        - make
        - cp -R data/resources bin/resources
        - ctest
        - make copy_resources
        - make package
        - sh ./tools/CI/upload-CI-build.sh

      before_cache:
        - cmake -P ./cmake/pmm.cmake /Conan /Clean

deploy:
  provider: pages
  skip_cleanup: true
  local_dir: Doxygen_Docs/html
  github_token: $GH_REPO_TOKEN
  verbose: true
  on:
    condition: $DEPLOY_DOCUMENTATION = "true"
    branch: master
